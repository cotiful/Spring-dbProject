{{> /layout/header}}

<!-- 컨테이너 시작 -->
<div class="container mt-3">

    <!-- 회원수정 폼 시작 -->
    <!-- 폼 태그는 put, delete 요청을 할 수 없다. 그래서 자바스크립트로 제어해야 한다. -->
    <form>
        <!-- 데이터를 숨기고 싶으면 hidden 사용 -->
        <input type="hidden" id="id" value="{{principal.id}}">
        <div class="mb-3 mt-3">
            <input type="text" class="form-control" value="{{principal.username}}" id="username" readonly>
        </div>
        <div class="mb-3">
            <input type="password" class="form-control" value="{{principal.password}}" id="password" required>
        </div>
        <div class="mb-3">
            <input type="email" class="form-control" value="{{principal.email}}" id="email" required>
        </div>
        <button type="button" class="btn btn-dark" onclick="update()">수정완료</button>
    </form>
    <!-- 회원수정 폼 끝 -->

</div>
<!-- 컨테이너 끝 -->

<script>
   async function update() {

        //1.jquery로 password, email 찾아서 자바스크립트 오브젝트로 만들기
         let user = {
             password : $("#password").val(),
             email:$("#email").val()
         }
         console.log(user);
        
        //2. 자바스크립트 오브젝트를 json으로 변환하기
        //let userJson =`{"password": "${user.password}","email":"${user.email}"}`;
        let userJson = JSON.stringify(user);
        console.log(userJson);

        //다시 오브젝트로 변환 JSON->JAVASCRIPT
        //let userObject = JSON.parse(userJson);

        //3.fetch 요청하기
        let id = $("#id").val();
        console.log(id);

        //fetch post/put/delete만 중괄호 내용이 필요하다.
        let response = await fetch("/s/user/"+id,
        {
            method:"PUT",
            body: userJson,
            headers:{
                'ConTent-Type':'application/json; charset=utf-8',
            }
        });

        let responseObject = await response.json();

        if(responseObject.code ==1){
            alert("수정에 성공하였");
            location.href="/s/user/"+id;
        }else{
            alert("수정에 실패:" +responseObject.msg)
        }
        
        


        //(1)content-type을  json으로 설정하기
        //(2)put 메서드로 변경하기
        
        
        //(3)Body 데이터 실어 보내기
        //(4) ResponseDto로 응답받아서 code가 1이면 alert창으로 수정 성공 띄우기
        //(5)수정 성공 메시지 이후에 /메인 화면으로 이동하기 - location.href="/"
        //UX가 좋기 위해서는 "/s/user/+id"
        //Controller는 


        }
</script>

{{> /layout/footer}}